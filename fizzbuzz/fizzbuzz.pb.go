// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fizzbuzz.proto

package fizzbuzz

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FizzBuzzRequest struct {
	Start                int64    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64    `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FizzBuzzRequest) Reset()         { *m = FizzBuzzRequest{} }
func (m *FizzBuzzRequest) String() string { return proto.CompactTextString(m) }
func (*FizzBuzzRequest) ProtoMessage()    {}
func (*FizzBuzzRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34bcb06695496ad1, []int{0}
}

func (m *FizzBuzzRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FizzBuzzRequest.Unmarshal(m, b)
}
func (m *FizzBuzzRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FizzBuzzRequest.Marshal(b, m, deterministic)
}
func (m *FizzBuzzRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FizzBuzzRequest.Merge(m, src)
}
func (m *FizzBuzzRequest) XXX_Size() int {
	return xxx_messageInfo_FizzBuzzRequest.Size(m)
}
func (m *FizzBuzzRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FizzBuzzRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FizzBuzzRequest proto.InternalMessageInfo

func (m *FizzBuzzRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *FizzBuzzRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

type FizzBuzzResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Sequence             []string `protobuf:"bytes,2,rep,name=sequence,proto3" json:"sequence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FizzBuzzResponse) Reset()         { *m = FizzBuzzResponse{} }
func (m *FizzBuzzResponse) String() string { return proto.CompactTextString(m) }
func (*FizzBuzzResponse) ProtoMessage()    {}
func (*FizzBuzzResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_34bcb06695496ad1, []int{1}
}

func (m *FizzBuzzResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FizzBuzzResponse.Unmarshal(m, b)
}
func (m *FizzBuzzResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FizzBuzzResponse.Marshal(b, m, deterministic)
}
func (m *FizzBuzzResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FizzBuzzResponse.Merge(m, src)
}
func (m *FizzBuzzResponse) XXX_Size() int {
	return xxx_messageInfo_FizzBuzzResponse.Size(m)
}
func (m *FizzBuzzResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FizzBuzzResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FizzBuzzResponse proto.InternalMessageInfo

func (m *FizzBuzzResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *FizzBuzzResponse) GetSequence() []string {
	if m != nil {
		return m.Sequence
	}
	return nil
}

func init() {
	proto.RegisterType((*FizzBuzzRequest)(nil), "fizzbuzz.FizzBuzzRequest")
	proto.RegisterType((*FizzBuzzResponse)(nil), "fizzbuzz.FizzBuzzResponse")
}

func init() { proto.RegisterFile("fizzbuzz.proto", fileDescriptor_34bcb06695496ad1) }

var fileDescriptor_34bcb06695496ad1 = []byte{
	// 180 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xcb, 0xac, 0xaa,
	0x4a, 0x2a, 0xad, 0xaa, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x2c,
	0xb9, 0xf8, 0xdd, 0x32, 0xab, 0xaa, 0x9c, 0x4a, 0xab, 0xaa, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b,
	0x4b, 0x84, 0x44, 0xb8, 0x58, 0x8b, 0x4b, 0x12, 0x8b, 0x4a, 0x24, 0x18, 0x15, 0x18, 0x35, 0x98,
	0x83, 0x20, 0x1c, 0x21, 0x01, 0x2e, 0xe6, 0xd4, 0xbc, 0x14, 0x09, 0x26, 0xb0, 0x18, 0x88, 0xa9,
	0xe4, 0xc1, 0x25, 0x80, 0xd0, 0x5a, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc1, 0xc5, 0x5e,
	0x5c, 0x9a, 0x9c, 0x9c, 0x5a, 0x5c, 0x0c, 0xd6, 0xcd, 0x11, 0x04, 0xe3, 0x0a, 0x49, 0x71, 0x71,
	0x14, 0x83, 0x2c, 0xc8, 0x4b, 0x4e, 0x95, 0x60, 0x52, 0x60, 0xd6, 0xe0, 0x0c, 0x82, 0xf3, 0x8d,
	0xa2, 0xb8, 0x38, 0x60, 0x26, 0x09, 0xf9, 0x71, 0x09, 0xbb, 0xa7, 0x96, 0xc0, 0xb8, 0xc1, 0x50,
	0x25, 0x42, 0x92, 0x7a, 0x70, 0x2f, 0xa0, 0xb9, 0x57, 0x4a, 0x0a, 0x9b, 0x14, 0xc4, 0x3d, 0x4a,
	0x0c, 0x49, 0x6c, 0x60, 0x1f, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xee, 0xc4, 0x35, 0xfb,
	0x03, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FizzBuzzClient is the client API for FizzBuzz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FizzBuzzClient interface {
	GetFizzBuzzSequence(ctx context.Context, in *FizzBuzzRequest, opts ...grpc.CallOption) (*FizzBuzzResponse, error)
}

type fizzBuzzClient struct {
	cc *grpc.ClientConn
}

func NewFizzBuzzClient(cc *grpc.ClientConn) FizzBuzzClient {
	return &fizzBuzzClient{cc}
}

func (c *fizzBuzzClient) GetFizzBuzzSequence(ctx context.Context, in *FizzBuzzRequest, opts ...grpc.CallOption) (*FizzBuzzResponse, error) {
	out := new(FizzBuzzResponse)
	err := c.cc.Invoke(ctx, "/fizzbuzz.FizzBuzz/GetFizzBuzzSequence", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FizzBuzzServer is the server API for FizzBuzz service.
type FizzBuzzServer interface {
	GetFizzBuzzSequence(context.Context, *FizzBuzzRequest) (*FizzBuzzResponse, error)
}

func RegisterFizzBuzzServer(s *grpc.Server, srv FizzBuzzServer) {
	s.RegisterService(&_FizzBuzz_serviceDesc, srv)
}

func _FizzBuzz_GetFizzBuzzSequence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FizzBuzzRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FizzBuzzServer).GetFizzBuzzSequence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fizzbuzz.FizzBuzz/GetFizzBuzzSequence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FizzBuzzServer).GetFizzBuzzSequence(ctx, req.(*FizzBuzzRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FizzBuzz_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fizzbuzz.FizzBuzz",
	HandlerType: (*FizzBuzzServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFizzBuzzSequence",
			Handler:    _FizzBuzz_GetFizzBuzzSequence_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fizzbuzz.proto",
}
